import structlog

from util.constants import SUPPORTED_SHARING, EPSILON, SNR_NOISE_LOW, SNR_NOISE_HIGH, B_IN_MB, BITS_IN_BYTE, \
    SNR_NOISE_UNIT, TOTAL_VIDEO_CHUNKS
import numpy as np

SNR_THRESHOLD = 2e-8

#70
TMP_SNR = [
[0.7648533216749553, 0.74063235643465, 0.756505930051884, 0.747856810026768, 0.7, 0.7024201195009893, 0.7172794296360671, 0.7545397389063502, 0.7090995334496966, 0.7, 0.727490618128955, 0.7743441455494368, 0.7993792573421299, 0.7595933421379943, 0.7733609593553339, 0.7646234650204121, 0.8063306687359646, 0.8109960702174566, 0.7940002153237703, 0.7898562014205723, 0.7591930148912597, 0.7405677348409703, 0.7074630434603127, 0.7541714525078371, 0.8014665268857111, 0.8356057679227261, 0.8098023476704747, 0.7878402812558436, 0.7887841051140168, 0.7969052328041255, 0.7790262887244747, 0.7744177784220405, 0.7845450887798607, 0.8254368193217727, 0.8115883953283282, 0.7723686129042575, 0.7676040476425209, 0.7823992171888449, 0.8059392258988645, 0.7773140308440507, 0.7915216101902992, 0.8082836130556156, 0.8294325251282515, 0.8409384566760021, 0.8057701006122956, 0.7894001340353209, 0.7776604419463911, 0.7984936988056164, 0.8149735453368652],
[0.7164340488376596, 0.7414208675196967, 0.7251327991374406, 0.7, 0.7, 0.7, 0.7273122364624076, 0.7578535601916008, 0.7535669657119335, 0.7654870394947343, 0.7639251961728573, 0.7788654417957075, 0.7875802726094009, 0.7682400563292137, 0.7428957086139248, 0.744325605078529, 0.7, 0.7, 0.7, 0.7486906968230638, 0.7289933571532355, 0.7, 0.7, 0.7, 0.7, 0.720667094355042, 0.7, 0.7301288942064653, 0.7637997663778137, 0.7461022500302048, 0.7475684451026019, 0.7407115171666637, 0.755552247997518, 0.7175669599096304, 0.7560044810656422, 0.795794395623583, 0.8264845113662942, 0.8441264416611767, 0.8513838415733607, 0.8994464298415683, 0.8918257539968704, 0.9071253659179042, 0.9372824288389617, 0.9331100075819126, 0.8999193824138273, 0.8645428776938036, 0.8528754048315643, 0.8524337131109436, 0.8349874769113157],
[0.7280070918340388, 0.757133298141184, 0.7499625644014611, 0.7615704209162494, 0.740348178279699, 0.7684514219121874, 0.7211580877583527, 0.7, 0.7407416021958367, 0.7654089849919944, 0.7525103204935472, 0.7555578982539966, 0.7600027747976261, 0.7318803966832704, 0.7, 0.7399516058794015, 0.7777234089946711, 0.7482003730219291, 0.7354332448307043, 0.7756259252955511, 0.8141113384066538, 0.8233590636327228, 0.7774658155921532, 0.7843705880655887, 0.7584417082357404, 0.7835535337238652, 0.7799161428694, 0.8296083364688938, 0.797259527411234, 0.7957071513700852, 0.7945661986298037, 0.7511603745644726, 0.7372944127953504, 0.7612145672860929, 0.7543622648096803, 0.7781795140230866, 0.7760096569840582, 0.7814784653492641, 0.7711317419182271, 0.7931119390582664, 0.8162443672602417, 0.8355988857689076, 0.8500227773416462, 0.8266449813417697, 0.7795265144555206, 0.7647394271087231, 0.813962131588476, 0.808701248837457, 0.8506292565739019],
[0.7610138258007864, 0.7628748861046395, 0.7424283366315231, 0.7775941260945932, 0.8029096752831993, 0.8245662809091734, 0.8158261953180823, 0.78487618180651, 0.7905884411910519, 0.752843507099053, 0.7879736898374454, 0.8078212717241903, 0.8215110880692557, 0.8489401869173503, 0.8700526058941084, 0.8560592851819117, 0.8532919060869465, 0.865136491407645, 0.8633818355943381, 0.9029939416790249, 0.9396457386021545, 0.958970886380009, 0.9817783789952709, 0.9518746796154776, 0.9438286946781325, 0.9776347988286815, 0.990635067276483, 1, 1, 1, 0.9858586309780665, 0.9743515281974123, 0.9849102866664281, 0.9763417583024001, 1, 1, 0.9512516107095665, 0.9553284660898147, 0.9644579794173008, 0.9329094797218649, 0.9508824055236152, 0.9829293666522545, 0.9858342635035954, 0.940106488948979, 0.9157098440038458, 0.9468787624990904, 0.9434464060916287, 0.9518344902239717, 0.9780758994359983]
]
TMP_SNR_80 = [ #80
[0.9838755394257631, 1, 1, 1, 0.9954805512431495, 1, 1, 1, 0.9829200295992212, 1, 0.9812150965985531, 1, 0.9511237228663675, 0.9043839963902159, 0.8661239308279808, 0.9148012942077659, 0.8862882071804761, 0.8470211915582216, 0.8942112955225892, 0.8870722863616164, 0.8874392898632746, 0.9073295574192185, 0.8968785815655921, 0.856027147807079, 0.8203152517644257, 0.8175814888360589, 0.8, 0.8354398079030544, 0.8092255217385419, 0.8369042380852262, 0.8519436474299182, 0.8386588470310583, 0.8196264850856443, 0.8, 0.8443540995887698, 0.8536800089731915, 0.845098396710241, 0.8151132866098783, 0.8077190510656089, 0.817871871381434, 0.8117206503781893, 0.8238988064282092, 0.8, 0.8359495351753107, 0.8305896930023906, 0.8470503309400821, 0.8594192138680283, 0.8230794421837797, 0.8524538371889104],
[0.8432126693458223, 0.8469128871708965, 0.8666860486576883, 0.9161259656806439, 0.9433061667669039, 0.9852057106071264, 1, 1, 1, 1, 1, 0.9988655119991041, 1, 1, 0.9753820870836654, 0.9402857165908375, 0.9846756027014119, 0.9791500782054847, 0.9680500281130846, 0.9580819920810265, 0.938807308562077, 0.914400438229744, 0.9342176645358062, 0.9270563208299295, 0.9562518452371562, 1, 0.9706871634140911, 0.9426596863538759, 0.9403263445692057, 0.9696676570705729, 1, 0.9817115405546042, 0.9640147401272542, 0.9899666851651611, 1, 1, 0.9768959352098292, 0.9312823390256716, 0.9728292716792502, 0.9351929948749822, 0.9636476302508299, 0.9976356713186216, 1, 1, 1, 0.9527441778082815, 0.9721289203139569, 0.9568151715931061, 0.9591224334015696],
[0.9240974320739821, 0.9570038386315443, 0.9617602348116218, 0.9671678646846504, 0.954400532452241, 0.9537166529524175, 0.918192373737023, 0.8978938552488014, 0.9335855142077386, 0.8970886872185455, 0.8773316968085, 0.829128026037533, 0.865520676484421, 0.830850579820906, 0.821141232406912, 0.8, 0.8246678307377437, 0.8507899840056448, 0.8413909575657883, 0.8523956908803539, 0.8974921407714092, 0.8573622638517548, 0.8908196420563768, 0.9224322936558154, 0.8774404538828936, 0.9256759154278003, 0.9192604934643479, 0.9470270460416553, 0.9011905858453234, 0.95028288374685, 0.9305682423619807, 0.9495153479443306, 0.9988341636237456, 0.9980304566030163, 0.9930372695711834, 0.9537453015959131, 0.9406739594940536, 0.9272297917427073, 0.968049777678939, 0.9575273204961756, 0.9286764690540263, 0.89194652672077, 0.9370833408944624, 0.8908138058927174, 0.9118733081149779, 0.8817070495646638, 0.8713777135618661, 0.8757579342660742, 0.9093938598281991],
[0.8875741478917475, 0.8944765709299711, 0.9232747439736013, 0.923736598361967, 0.9447915219316589, 0.9573811195042576, 0.9118150246114297, 0.8756763754636551, 0.8827151155761398, 0.8445718160099327, 0.8211485458121073, 0.8155042921764235, 0.8, 0.8092453743578023, 0.8, 0.8, 0.8, 0.8010540402193859, 0.8230317862778269, 0.8559607911355763, 0.8710341099265255, 0.8456633824675257, 0.8803848606317954, 0.838174877355016, 0.8730515827966479, 0.9226968064569837, 0.9272900832116602, 0.9169021318736889, 0.8963554401075752, 0.8533122282042552, 0.8118008166866859, 0.8064787315355525, 0.8, 0.8043829042967298, 0.850590569261939, 0.8609106754654746, 0.8455777963570881, 0.815177726983678, 0.8, 0.8130117668211677, 0.8140318362245004, 0.8, 0.8102449936525713, 0.8, 0.8024367424355602, 0.8380595533614814, 0.8, 0.8, 0.8128672020002233]
]


class User:
    """A User getting data from the satellite"""
    def __init__(self, agent_id):
        self.agent_id = agent_id

        # self.snr_noise = [np.random.uniform(SNR_NOISE_LOW, 1)]
        self.snr_noise = TMP_SNR[self.agent_id]
        self.index = -1

        # just consider downlink for now; more interesting for most apps anyways
        self.log = structlog.get_logger(sat_id=self.agent_id)
        self.log.info('User init', snr_noise=self.snr_noise)

    def __repr__(self):
        return str(self.agent_id)

    def get_snr_noise(self):
        # return self.snr_noise[-1]
        return self.snr_noise[self.index]

    def get_snr_log(self):
        return self.snr_noise

    def update_snr_noise(self):
        """
        self.snr_noise.append(self.snr_noise[-1] + np.random.uniform(-SNR_NOISE_UNIT, SNR_NOISE_UNIT))

        if self.snr_noise[-1] > 1:
            self.snr_noise[-1] = 1
        elif self.snr_noise[-1] < SNR_NOISE_LOW:
            self.snr_noise[-1] = SNR_NOISE_LOW

        return self.snr_noise[-1]

        """
        self.index += 1
        return self.snr_noise[self.index]


    def get_agent_id(self):
        return self.agent_id

"""
snr_noise = [np.random.uniform(SNR_NOISE_LOW, 1)]
for _ in range(TOTAL_VIDEO_CHUNKS):
    snr_noise.append(snr_noise[-1] + np.random.uniform(-SNR_NOISE_UNIT, SNR_NOISE_UNIT))
    if snr_noise[-1] > 1:
        snr_noise[-1] = 1
    elif snr_noise[-1] < SNR_NOISE_LOW:
        snr_noise[-1] = SNR_NOISE_LOW
print(snr_noise)
"""
